{
  "name": "ecommerce-cap",
  "version": "1.0.0",
  "description": "A simple CAP project.",
  "repository": "<Add your repository here>",
  "license": "UNLICENSED",
  "private": true,
  "dependencies": {
    "@sap/cds": "^8",
    "@sap/cds-dk": "^7",
    "@sap/cds-hana": "^2",
    "bcrypt": "^5.1.1",
    "cds-routing-handlers": "^3.0.7",
    "express": "^4",
    "jsonwebtoken": "^9.0.2",
    "passport": "^0",
    "rimraf": "^5.0.5",
    "ts-node": "^10.9.2",
    "typedi": "^0.10.0"
  },
  "devDependencies": {
    "@cap-js/cds-typer": ">=0.1",
    "@cap-js/cds-types": "^0.6",
    "@cap-js/sqlite": "^1",
    "@types/bcrypt": "^5.0.2",
    "@types/jsonwebtoken": "^9.0.7",
    "@types/node": "^20",
    "@types/express": "^4.17.21",
    "typescript": "^5"
  },
  "scripts": {
    "start": "npx -p @sap/cds-dk cds-serve --profile production",
    "watch": "npx cds-ts watch",
    "bind": "cds add hana --for hybrid && cds deploy --to hana --profile hybrid",
    "hybrid": "npx cds-ts watch --profile hybrid",
    "generate-types": "npx @cap-js/cds-typer ./srv/index.cds --outputDirectory ./@cds-models",
    "build-mta": "mbt build -t gen --mtar mta.tar",
    "build:cf": "npm run build:cds && npm run cleanup:ts && npm run build:ts",
    "build:ts": "npx tsc",
    "build:cds": "cds build --production",
    "cleanup:ts": "npx rimraf -v -g gen/srv/srv/**/*.ts",
    "deploy": "npm i && npm run build-mta && cf deploy gen/mta.tar --delete-services --abort-on-error && npm i"
  },
  "imports": {
    "#cds-models/*": "./@cds-models/*/index.js"
  },
  "cds": {
    "requires": {
      "auth": {
        "impl": "./srv/custom-auth.ts",
        "users": {
          "admin": {
            "password": "admin1234",
            "roles": [
              "admin"
            ]
          },
          "vendor": {
            "password": "vendor1234",
            "roles": [
              "vendor"
            ]
          },
          "user": {
            "password": "user1234",
            "roles": [
              "user"
            ]
          }
        }
      }
    }
  }
}
